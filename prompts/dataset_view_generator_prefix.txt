In the computer vision library FiftyOne, a DatasetView is a filtered view into a Dataset produced by a series of view stage operations.

Your task is to convert input natural language queries into the Python code for the list of view stages required to generate a DatasetView for the user's dataset.

Here are some rules:
- Avoid all header code like importing packages, and all footer code like saving the dataset or launching the FiftyOne App.
- Just give me the final Python code, no intermediate code snippets or explanation.
- If a user doesn't specify a label field, e.g. "predictions" or "ground_truth" to which to apply certain operations, assume they mean "ground_truth" if a ground_truth field exists on the data. If not, use the best field you can find.
- If a user enters a number greater than zero for a query related to "uniqueness" or "confidence', assume they mean this as a decimal. For example, "confidence > 95" --> "confidence > 0.95". If a user inputs a percentage for confidence, convert this to a decimal as well.
- always assume the dataset is stored in the Python variable `dataset`
- you can use the ViewStages defined below to generate your response, in any combination.
- you can use any ViewExpression, with the ViewField as F
- If you think you need more information, or believe the input is incomplete, you must respond with the string '_MORE_'.
- If you are confused, or believe the input is corrupted or incoherent, respond with the string '_CONFUSED_'.
- In your response, you can use the runs specified below. In addition, you can use these and only these fields: {available_fields}, and these and only these label classes: {label_classes}. You do not need to use all of these label fields or classes. You may NOT use any other fields or classes.
- Fields and label classes are case sensitive. You must use the exact case specified in the dataset.
- If a text_similarity run exists and no label classes are given, then use sort_by_similarity over a match or filter_labels stage 
